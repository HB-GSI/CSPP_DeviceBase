[myDMM]
LVClassPath="CS++DMM.lvlib:CS++DMM.lvclass"
CS++BaseActor:CS++BaseActor.DefaultGUI="CS++DMMGui.lvlib:CS++DMMGui.lvclass"
CS++BaseActor:CS++BaseActor.LaunchDefaultGUI=False
CS++BaseActor:CS++BaseActor.ErrorDialog=True
CS++BaseActor:CS++BaseActor.PollingInterval_s=-1.
CS++DeviceActors:CS++DeviceActor.ResourceName="myDMM"
CS++DeviceActors:CS++DeviceActor.Reset=False
CS++DeviceActors:CS++DeviceActor.Selftest=False
CS++DeviceActors:CS++DeviceActor.OptionString="Simulate=0,RangeCheck=1,QueryInstrStatus=0,Cache=1"
CS++DeviceActors:CS++DeviceActor.ResetWithDefaults=False
CS++DMM:CS++DMM.NofPointsToPoll=1

PV-URL are defined in a separate section, so it can be used by other objects, too, e.g. the corresponding GUI.
[myDMM.URLs]
ResourceName="ni.var.psp://localhost/myProcess/myDMM_ResourceName"
DriverRevision="ni.var.psp://localhost/myProcess/myDMM_DriverRevision"
FirmwareRevision="ni.var.psp://localhost/myProcess/myDMM_FirmwareRevision"
SelftestResultCode="ni.var.psp://localhost/myProcess/myDMM_SelftestResultCode"
SelftestResultMessage="ni.var.psp://localhost/myProcess/myDMM_SelftestResultMessage"
ErrorCode="ni.var.psp://localhost/myProcess/myDMM_ErrorCode"
ErrorMessage="ni.var.psp://localhost/myProcess/myDMM_ErrorMessage"
Reading="ni.var.psp://localhost/myProcess/myDMM_Reading"
MPReading="ni.var.psp://localhost/myProcess/myDMM_MPReading"
IsOverRange="ni.var.psp://localhost/myProcess/myDMM_IsOverRange"
MeasurementFunction="ni.var.psp://localhost/myProcess/myDMM_MeasurementFunction"
AbsoluteResolution="ni.var.psp://localhost/myProcess/myDMM_AbsoluteResolution"
Range="ni.var.psp://localhost/myProcess/myDMM_Range"
ApertureTime="ni.var.psp://localhost/myProcess/myDMM_ApertureTime"
ApertureTimeUnit="ni.var.psp://localhost/myProcess/myDMM_ApertureTimeUnit"
ActualRange="ni.var.psp://localhost/myProcess/myDMM_ActualRange"
SampleInterval="ni.var.psp://localhost/myProcess/myDMM_SampleInterval"
TriggerCount="ni.var.psp://localhost/myProcess/myDMM_TriggerCount"
SampleCount="ni.var.psp://localhost/myProcess/myDMM_SampleCount"
SampleTrigger="ni.var.psp://localhost/myProcess/myDMM_SampleTrigger"
MeasCompleteDestination="ni.var.psp://localhost/myProcess/myDMM_MeasCompleteDestination"
AutoZeroMode="ni.var.psp://localhost/myProcess/myDMM_AutoZeroMode"
PowerLineFrequency="ni.var.psp://localhost/myProcess/myDMM_PowerLineFrequency"
FrequencyVoltageRange="ni.var.psp://localhost/myProcess/myDMM_FrequencyVoltageRange"
ACMinFrequency="ni.var.psp://localhost/myProcess/myDMM_ACMinFrequency"
ACMaxFrequency="ni.var.psp://localhost/myProcess/myDMM_ACMaxFrequency"
TransducerType="ni.var.psp://localhost/myProcess/myDMM_TransducerType"
ThermocoupleType="ni.var.psp://localhost/myProcess/myDMM_ThermocoupleType"
ReferenceJunctionType="ni.var.psp://localhost/myProcess/myDMM_ReferenceJunctionType"
FixedReferenceJunction="ni.var.psp://localhost/myProcess/myDMM_FixedReferenceJunction"
Alpha="ni.var.psp://localhost/myProcess/myDMM_Alpha"
Resistance="ni.var.psp://localhost/myProcess/myDMM_Resistance"
TriggerSource="ni.var.psp://localhost/myProcess/myDMM_TriggerSource"
TriggerDelay="ni.var.psp://localhost/myProcess/myDMM_TriggerDelay"
TriggerSlope="ni.var.psp://localhost/myProcess/myDMM_TriggerSlope"

[myACPwr]
LVClassPath="CS++ACPwr.lvlib:CS++ACPwr.lvclass"
CS++BaseActor:CS++BaseActor.DefaultGUI="CS++DeviceGUIActor.lvlib:CS++DeviceGUIActor.lvclass"
CS++BaseActor:CS++BaseActor.LaunchDefaultGUI=False
CS++BaseActor:CS++BaseActor.ErrorDialog=True
CS++BaseActor:CS++BaseActor.PollingInterval_s=-1.
CS++DeviceActors:CS++DeviceActor.ResourceName="myACPwr"
CS++DeviceActors:CS++DeviceActor.Reset=False
CS++DeviceActors:CS++DeviceActor.Selftest=False
CS++DeviceActors:CS++DeviceActor.OptionString="Simulate=0,RangeCheck=1,QueryInstrStatus=0,Cache=1"
CS++DeviceActors:CS++DeviceActor.ResetWithDefaults=False

PV-URL are defined in a separate section, so it can be used by other objects, too, e.g. the corresponding GUI.
[myACPwr.URLs]
ResourceName="ni.var.psp://localhost/myProcess/myACPwr_ResourceName"
DriverRevision="ni.var.psp://localhost/myProcess/myACPwr_DriverRevision"
FirmwareRevision="ni.var.psp://localhost/myProcess/myACPwr_FirmwareRevision"
SelftestResultCode="ni.var.psp://localhost/myProcess/myACPwr_SelftestResultCode"
SelftestResultMessage="ni.var.psp://localhost/myProcess/myACPwr_SelftestResultMessage"
ErrorCode="ni.var.psp://localhost/myProcess/myACPwr_ErrorCode"
ErrorMessage="ni.var.psp://localhost/myProcess/myACPwr_ErrorMessage"

[myDCPwr]
LVClassPath="CS++DCPwr.lvlib:CS++DCPwr.lvclass"
CS++BaseActor:CS++BaseActor.DefaultGUI="CS++DCPwrGui.lvlib:CS++DCPwrGui.lvclass"
CS++BaseActor:CS++BaseActor.LaunchDefaultGUI=False
CS++BaseActor:CS++BaseActor.ErrorDialog=True
CS++BaseActor:CS++BaseActor.PollingInterval_s=-1.
CS++DeviceActors:CS++DeviceActor.ResourceName="myDCPwr"
CS++DeviceActors:CS++DeviceActor.Reset=False
CS++DeviceActors:CS++DeviceActor.Selftest=False
CS++DeviceActors:CS++DeviceActor.OptionString="Simulate=0,RangeCheck=1,QueryInstrStatus=0,Cache=1"
CS++DeviceActors:CS++DeviceActor.ResetWithDefaults=False
#CS++DCPwr:CS++DCPwr.ChannelNames="comma separated list"; can be physical or virtual names. 
CS++DCPwr:CS++DCPwr.ChannelNames="0"
CS++DCPwr:CS++DCPwr.OutputStates="0"

PV-URL are defined in a separate section, so it can be used by other objects, too, e.g. the corresponding GUI.
[myDCPwr.URLs]
ResourceName="ni.var.psp://localhost/myProcess/myDCPwr_ResourceName"
DriverRevision="ni.var.psp://localhost/myProcess/myDCPwr_DriverRevision"
FirmwareRevision="ni.var.psp://localhost/myProcess/myDCPwr_FirmwareRevision"
SelftestResultCode="ni.var.psp://localhost/myProcess/myDCPwr_SelftestResultCode"
SelftestResultMessage="ni.var.psp://localhost/myProcess/myDCPwr_SelftestResultMessage"
ErrorCode="ni.var.psp://localhost/myProcess/myDCPwr_ErrorCode"
ErrorMessage="ni.var.psp://localhost/myProcess/myDCPwr_ErrorMessage"
NumberOfChannels="ni.var.psp://localhost/myProcess/myDCPwr_NumberOfChannels"
#For all Channels:
#Channel_0:
Measure_V_0="ni.var.psp://localhost/myProcess/myDMM_Measure_V_0"
Measure_A_0="ni.var.psp://localhost/myProcess/myDMM_Measure_A_0"
DesiredOutputState_0="ni.var.psp://localhost/myProcess/myDCPwr_DesiredOutputState_0"
InState_0="ni.var.psp://localhost/myProcess/myDCPwr_InState_0"
MaxCurrentLimit_0="ni.var.psp://localhost/myProcess/myDCPwr_MaxCurrentLimit_0"
MaxVoltageLevel_0="ni.var.psp://localhost/myProcess/myDCPwr_MaxVoltageLevel_0"
OutputEnable_0="ni.var.psp://localhost/myProcess/myDCPwr_OutputEnable_0"
RangeType_0="ni.var.psp://localhost/myProcess/myDCPwr_RangeType_0"
Range_0="ni.var.psp://localhost/myProcess/myDCPwr_Range_0"
CurrentLimit_0="ni.var.psp://localhost/myProcess/myDCPwr_CurrentLimit_0"
Behavior_0="ni.var.psp://localhost/myProcess/myDCPwr_Behavior_0"
OVPLimit_0="ni.var.psp://localhost/myProcess/myDCPwr_OVPLimit_0"
OVPEnabled_0="ni.var.psp://localhost/myProcess/myDCPwr_OVPEnabled_0"
VoltageLevel_0="ni.var.psp://localhost/myProcess/myDCPwr_VoltageLevel_0"
TriggerSource_0="ni.var.psp://localhost/myProcess/myDCPwr_TriggerSource_0"
TriggerVoltageLevel_0="ni.var.psp://localhost/myProcess/myDCPwr_TriggerVoltageLevel_0"
TriggerCurrentLimit_0="ni.var.psp://localhost/myProcess/myDCPwr_TriggerCurrentLimit_0"

[myCounter]
LVClassPath="CS++Counter.lvlib:CS++Counter.lvclass"
CS++BaseActor:CS++BaseActor.DefaultGUI="CS++DeviceGUIActor.lvlib:CS++DeviceGUIActor.lvclass"
CS++BaseActor:CS++BaseActor.LaunchDefaultGUI=False
CS++BaseActor:CS++BaseActor.ErrorDialog=True
CS++BaseActor:CS++BaseActor.PollingInterval_s=-1.
CS++DeviceActors:CS++DeviceActor.ResourceName="myCounter"
CS++DeviceActors:CS++DeviceActor.Reset=False
CS++DeviceActors:CS++DeviceActor.Selftest=False
CS++DeviceActors:CS++DeviceActor.OptionString="Simulate=0,RangeCheck=1,QueryInstrStatus=0,Cache=1"
CS++DeviceActors:CS++DeviceActor.ResetWithDefaults=False

PV-URL are defined in a separate section, so it can be used by other objects, too, e.g. the corresponding GUI.
[myCounter.URLs]
ResourceName="ni.var.psp://localhost/myProcess/myCounter_ResourceName"
DriverRevision="ni.var.psp://localhost/myProcess/myCounter_DriverRevision"
FirmwareRevision="ni.var.psp://localhost/myProcess/myCounter_FirmwareRevision"
SelftestResultCode="ni.var.psp://localhost/myProcess/myCounter_SelftestResultCode"
SelftestResultMessage="ni.var.psp://localhost/myProcess/myCounter_SelftestResultMessage"
ErrorCode="ni.var.psp://localhost/myProcess/myCounter_ErrorCode"
ErrorMessage="ni.var.psp://localhost/myProcess/myCounter_ErrorMessage"

[myFgen]
LVClassPath="CS++Fgen.lvlib:CS++Fgen.lvclass"
CS++BaseActor:CS++BaseActor.DefaultGUI="CS++FgenGui.lvlib:CS++FgenGui.lvclass"
CS++BaseActor:CS++BaseActor.LaunchDefaultGUI=False
CS++BaseActor:CS++BaseActor.ErrorDialog=True
CS++BaseActor:CS++BaseActor.PollingInterval_s=-1.
CS++DeviceActors:CS++DeviceActor.ResourceName="myFgen"
CS++DeviceActors:CS++DeviceActor.Reset=False
CS++DeviceActors:CS++DeviceActor.Selftest=False
CS++DeviceActors:CS++DeviceActor.OptionString="Simulate=0,RangeCheck=1,QueryInstrStatus=0,Cache=1"
CS++DeviceActors:CS++DeviceActor.ResetWithDefaults=False
#CS++Fgen:CS++Fgen.ChannelNames="comma separated list"; can be physical or virtual names. 
CS++Fgen:CS++Fgen.ChannelNames="0"

PV-URL are defined in a separate section, so it can be used by other objects, too, e.g. the corresponding GUI.
[myFgen.URLs]
ResourceName="ni.var.psp://localhost/myProcess/myFgen_ResourceName"
DriverRevision="ni.var.psp://localhost/myProcess/myFgen_DriverRevision"
FirmwareRevision="ni.var.psp://localhost/myProcess/myFgen_FirmwareRevision"
SelftestResultCode="ni.var.psp://localhost/myProcess/myFgen_SelftestResultCode"
SelftestResultMessage="ni.var.psp://localhost/myProcess/myFgen_SelftestResultMessage"
ErrorCode="ni.var.psp://localhost/myProcess/myFgen_ErrorCode"
ErrorMessage="ni.var.psp://localhost/myProcess/myFgen_ErrorMessage"
NumberOfChannels="ni.var.psp://localhost/myProcess/myFgen_NumberOfChannels"
#For all Channels:
AM-ModulationWaveform="ni.var.psp://localhost/myProcess/myFgen_AM-ModulationWaveform"
AM-ModulationDepth="ni.var.psp://localhost/myProcess/myFgen_AM-ModulationDepth"
AM-ModulationFrequency="ni.var.psp://localhost/myProcess/myFgen_AM-ModulationFrequency"
FM-ModulationWaveform="ni.var.psp://localhost/myProcess/myFgen_FM-ModulationWaveform"
FM-PeakDeviation="ni.var.psp://localhost/myProcess/myFgen_FM-PeakDeviation"
FM-ModulationFrequency="ni.var.psp://localhost/myProcess/myFgen_FM-ModulationFrequency"
TriggerRate="ni.var.psp://localhost/myProcess/myFgen_TriggerRate"
OutputMode="ni.var.psp://localhost/myProcess/myFgen_OutputMode"
ReferenceClockSource="ni.var.psp://localhost/myProcess/myFgen_ReferenceClockSource"
SampleClockSource="ni.var.psp://localhost/myProcess/myFgen_SampleClockSource"
SampleClockOutputEnabled="ni.var.psp://localhost/myProcess/myFgen_SampleClockOutputEnabled"
SampleRate="ni.var.psp://localhost/myProcess/myFgen_SampleRate"
#Channel_0:
OperationMode_0="ni.var.psp://localhost/myProcess/myFgen_OperationMode_0"
AdvancedTriggerSource_0="ni.var.psp://localhost/myProcess/myFgen_AdvancedTriggerSource_0"
AdvancedTriggerSlope_0="ni.var.psp://localhost/myProcess/myFgen_AdvancedTriggerSlope_0"
AM-Enabled_0="ni.var.psp://localhost/myProcess/myFgen_AM-Enabled_0"
AM-Source_0="ni.var.psp://localhost/myProcess/myFgen_AM-Source_0"
Arb-Frequency_0="ni.var.psp://localhost/myProcess/myFgen_Arb-Frequency_0"
BurstCount_0="ni.var.psp://localhost/myProcess/myFgen_BurstCount_0"
FM-Enabled_0="ni.var.psp://localhost/myProcess/myFgen_FM-Enabled_0"
FM-Source_0="ni.var.psp://localhost/myProcess/myFgen_FM-Source_0"
ChannelEnabled_0="ni.var.psp://localhost/myProcess/myFgen_ChannelEnabled_0"
OutputImpedance_0="ni.var.psp://localhost/myProcess/myFgen_OutputImpedance_0"
ResumeTriggerSource_0="ni.var.psp://localhost/myProcess/myFgen_ResumeTriggerSource_0"
ResumeTriggerSlope_0="ni.var.psp://localhost/myProcess/myFgen_ResumeTriggerSlope_0"
StartPhase_0="ni.var.psp://localhost/myProcess/myFgen_StartPhase_0"
Frequency_0="ni.var.psp://localhost/myProcess/myFgen_Frequency_0"
Waveform_0="ni.var.psp://localhost/myProcess/myFgen_Waveform_0"
Amplitude_0="ni.var.psp://localhost/myProcess/myFgen_Amplitude_0"
DCOffset_0="ni.var.psp://localhost/myProcess/myFgen_DCOffset_0"
StartTriggerSource_0="ni.var.psp://localhost/myProcess/myFgen_StartTriggerSource_0"
StartTriggerSlope_0="ni.var.psp://localhost/myProcess/myFgen_StartTriggerSlope_0"
StopTriggerSource_0="ni.var.psp://localhost/myProcess/myFgen_StopTriggerSource_0"
StopTriggerSlope_0="ni.var.psp://localhost/myProcess/myFgen_StopTriggerSlope_0"
TriggerSource_0="ni.var.psp://localhost/myProcess/myFgen_TriggerSource_0"

[myPwrMeter]
LVClassPath="CS++PwrMeter.lvlib:CS++PwrMeter.lvclass"
CS++BaseActor:CS++BaseActor.DefaultGUI="CS++DeviceGUIActor.lvlib:CS++DeviceGUIActor.lvclass"
CS++BaseActor:CS++BaseActor.LaunchDefaultGUI=False
CS++BaseActor:CS++BaseActor.ErrorDialog=True
CS++BaseActor:CS++BaseActor.PollingInterval_s=-1.
CS++DeviceActors:CS++DeviceActor.ResourceName="myPwrMeter"
CS++DeviceActors:CS++DeviceActor.Reset=False
CS++DeviceActors:CS++DeviceActor.Selftest=False
CS++DeviceActors:CS++DeviceActor.OptionString="Simulate=0,RangeCheck=1,QueryInstrStatus=0,Cache=1"
CS++DeviceActors:CS++DeviceActor.ResetWithDefaults=False

PV-URL are defined in a separate section, so it can be used by other objects, too, e.g. the corresponding GUI.
[myPwrMeter.URLs]
ResourceName="ni.var.psp://localhost/myProcess/myPwrMeter_ResourceName"
DriverRevision="ni.var.psp://localhost/myProcess/myPwrMeter_DriverRevision"
FirmwareRevision="ni.var.psp://localhost/myProcess/myPwrMeter_FirmwareRevision"
SelftestResultCode="ni.var.psp://localhost/myProcess/myPwrMeter_SelftestResultCode"
SelftestResultMessage="ni.var.psp://localhost/myProcess/myPwrMeter_SelftestResultMessage"
ErrorCode="ni.var.psp://localhost/myProcess/myPwrMeter_ErrorCode"
ErrorMessage="ni.var.psp://localhost/myProcess/myPwrMeter_ErrorMessage"

[myScope]
LVClassPath="CS++Scope.lvlib:CS++Scope.lvclass"
CS++BaseActor:CS++BaseActor.DefaultGUI="CS++ScopeGUI.lvlib:CS++ScopeGUI.lvclass"
CS++BaseActor:CS++BaseActor.LaunchDefaultGUI=True
CS++BaseActor:CS++BaseActor.PollingInterval_s=1000.
CS++BaseActor:CS++BaseActor.ErrorDialog=True
CS++DeviceActors:CS++DeviceActor.ResourceName="myScope"
CS++DeviceActors:CS++DeviceActor.Reset=False
CS++DeviceActors:CS++DeviceActor.Selftest=True
CS++DeviceActors:CS++DeviceActor.OptionString=""
CS++DeviceActors:CS++DeviceActor.ResetWithDefaults=False
CS++Scope:CS++Scope.ChannelNames="0,1"
CS++Scope:CS++Scope.MaxWaveformLength=50000

PV-URL are defined in a separate section, so it can be used by other objects, too, e.g. the corresponding GUI.
[myScope.URLs]
ResourceName="ni.var.psp://localhost/myProcess/myScope_ResourceName"
DriverRevision="ni.var.psp://localhost/myProcess/myScope_DriverRevision"
FirmwareRevision="ni.var.psp://localhost/myProcess/myScope_FirmwareRevision"
SelftestResultCode="ni.var.psp://localhost/myProcess/myScope_SelftestResultCode"
SelftestResultMessage="ni.var.psp://localhost/myProcess/myScope_SelftestResultMessage"
ErrorCode="ni.var.psp://localhost/myProcess/myScope_ErrorCode"
ErrorMessage="ni.var.psp://localhost/myProcess/myScope_ErrorMessage"
NumberOfChannels="ni.var.psp://localhost/myProcess/myScope_NumberOfChannels"
ActualSampleRate="ni.var.psp://localhost/myProcess/myScope_ActualSampleRate"
TimePerRecord="ni.var.psp://localhost/myProcess/myScope_TimePerRecord"
AcquisitionStartTime="ni.var.psp://localhost/myProcess/myScope_AcquisitionStartTime"
TriggerLevel="ni.var.psp://localhost/myProcess/myScope_TriggerLevel"
GlitchWidth="ni.var.psp://localhost/myProcess/myScope_GlitchWidth"
LowReference="ni.var.psp://localhost/myProcess/myScope_LowReference"
MidReference="ni.var.psp://localhost/myProcess/myScope_MidReference"
HighReference="ni.var.psp://localhost/myProcess/myScope_HighReference"
RuntLowThreshold="ni.var.psp://localhost/myProcess/myScope_RuntLowThreshold"
RuntHighThreshold="ni.var.psp://localhost/myProcess/myScope_RuntHighThreshold"
TriggerHoldoff="ni.var.psp://localhost/myProcess/myScope_TriggerHoldoff"
WidthLowThreshold="ni.var.psp://localhost/myProcess/myScope_WidthLowThreshold"
WidthHighThreshold="ni.var.psp://localhost/myProcess/myScope_WidthHighThreshold"
AcquisitionStatus="ni.var.psp://localhost/myProcess/myScope_AcquisitionStatus"
ActualRecordLength="ni.var.psp://localhost/myProcess/myScope_ActualRecordLength"
ActualSampleMode="ni.var.psp://localhost/myProcess/myScope_ActualSampleMode"
ActualTimeIncrement="ni.var.psp://localhost/myProcess/myScope_ActualTimeIncrement"
ACLineTriggerSlope="ni.var.psp://localhost/myProcess/myScope_ACLineTriggerSlope"
MinRecordLength="ni.var.psp://localhost/myProcess/myScope_MinRecordLength"
AcquisitionType="ni.var.psp://localhost/myProcess/myScope_AcquisitionType"
TriggerSlope="ni.var.psp://localhost/myProcess/myScope_TriggerSlope"
GlitchCondition="ni.var.psp://localhost/myProcess/myScope_GlitchCondition"
GlitchPolarity="ni.var.psp://localhost/myProcess/myScope_GlitchPolarity"
InterpolationMethod="ni.var.psp://localhost/myProcess/myScope_InterpolationMethod"
NumberOfAverages="ni.var.psp://localhost/myProcess/myScope_NumberOfAverages"
NumberOfEnvelopes="ni.var.psp://localhost/myProcess/myScope_NumberOfEnvelopes"
TriggerType="ni.var.psp://localhost/myProcess/myScope_TriggerType"
TriggerCoupling="ni.var.psp://localhost/myProcess/myScope_TriggerCoupling"
TriggerModifier="ni.var.psp://localhost/myProcess/myScope_TriggerModifier"
TVLineNumber="ni.var.psp://localhost/myProcess/myScope_TVLineNumber"
TVEvent="ni.var.psp://localhost/myProcess/myScope_TVEvent"
TVTriggerPolarity="ni.var.psp://localhost/myProcess/myScope_TVTriggerPolarity"
TVSignalFormat="ni.var.psp://localhost/myProcess/myScope_TVSignalFormat"
WidthCondition="ni.var.psp://localhost/myProcess/myScope_WidthCondition"
WidthPolarity="ni.var.psp://localhost/myProcess/myScope_WidthPolarity"
MeasurementDone="ni.var.psp://localhost/myProcess/myScope_MeasurementDone"
ContinousAcquisition="ni.var.psp://localhost/myProcess/myScope_ContinousAcquisition"
TriggerSource="ni.var.psp://localhost/myProcess/myScope_TriggerSource"
InputImpedance_0="ni.var.psp://localhost/myProcess/myScope_InputImpedance_0"
InputImpedance_1="ni.var.psp://localhost/myProcess/myScope_InputImpedance_1"
MaxInputFrequency_0="ni.var.psp://localhost/myProcess/myScope_MaxInputFrequency_0"
MaxInputFrequency_1="ni.var.psp://localhost/myProcess/myScope_MaxInputFrequency_1"
VerticalRange_0="ni.var.psp://localhost/myProcess/myScope_VerticalRange_0"
VerticalRange_1="ni.var.psp://localhost/myProcess/myScope_VerticalRange_1"
ProbeAttenuation_0="ni.var.psp://localhost/myProcess/myScope_ProbeAttenuation_0"
ProbeAttenuation_1="ni.var.psp://localhost/myProcess/myScope_ProbeAttenuation_1"
VerticalOffset_0="ni.var.psp://localhost/myProcess/myScope_VerticalOffset_0"
VerticalOffset_1="ni.var.psp://localhost/myProcess/myScope_VerticalOffset_1"
VerticalCoupling_0="ni.var.psp://localhost/myProcess/myScope_VerticalCoupling_0"
VerticalCoupling_1="ni.var.psp://localhost/myProcess/myScope_VerticalCoupling_1"
ChannelEnabled_0="ni.var.psp://localhost/myProcess/myScope_ChannelEnabled_0"
ChannelEnabled_1="ni.var.psp://localhost/myProcess/myScope_ChannelEnabled_1"
Waveform="ni.var.psp://localhost/myProcess/myScope_Waveform"

[myMCS]
LVClassPath="CS++MCS.lvlib:CS++MCS.lvclass"
CS++BaseActor:CS++BaseActor.DefaultGUI="CS++MCSGUI.lvlib:CS++MCSGUI.lvclass"
CS++BaseActor:CS++BaseActor.LaunchDefaultGUI=True
CS++BaseActor:CS++BaseActor.PollingInterval_s=-1.
CS++BaseActor:CS++BaseActor.ErrorDialog=True
CS++DeviceActors:CS++DeviceActor.ResourceName="myMCS"
CS++DeviceActors:CS++DeviceActor.Reset=False
CS++DeviceActors:CS++DeviceActor.Selftest=True
CS++DeviceActors:CS++DeviceActor.OptionString=""
CS++DeviceActors:CS++DeviceActor.ResetWithDefaults=False

PV-URL are defined in a separate section, so it can be used by other objects, too, e.g. the corresponding GUI.
[myMCS.URLs]
ResourceName="ni.var.psp://localhost/myProcess/myMCS_ResourceName"
DriverRevision="ni.var.psp://localhost/myProcess/myMCS_DriverRevision"
FirmwareRevision="ni.var.psp://localhost/myProcess/myMCS_FirmwareRevision"
SelftestResultCode="ni.var.psp://localhost/myProcess/myMCS_SelftestResultCode"
SelftestResultMessage="ni.var.psp://localhost/myProcess/myMCS_SelftestResultMessage"
ErrorCode="ni.var.psp://localhost/myProcess/MCS_ErrorCode"
ErrorMessage="ni.var.psp://localhost/myProcess/myMCS_ErrorMessage"
NumberOfCounts="ni.var.psp://localhost/myProcess/myMCS_NumberOfCounts"
NumberOfTotalCounts="ni.var.psp://localhost/myProcess/myMCS_NumberOfTotalCounts"
Status="ni.var.psp://localhost/myProcess/myMCS_Status"
BinWidth="ni.var.psp://localhost/myProcess/myMCS_BinWidth"
NumberOfBins="ni.var.psp://localhost/myProcess/myMCS_NumberOfBins"
DiscrimintaorLevel="ni.var.psp://localhost/myProcess/myMCS_DiscrimintaorLevel"
TriggerLevel="ni.var.psp://localhost/myProcess/myMCS_TriggerLevel"
DiscrimintaorSlope="ni.var.psp://localhost/myProcess/myMCS_DiscrimintaorSlope"
TriggerSlope="ni.var.psp://localhost/myProcess/myMCS_TriggerSlope"

[myMotor]
LVClassPath="CS++Motor.lvlib:CS++Motor.lvclass"
CS++BaseActor:CS++BaseActor.DefaultGUI="CS++MotorGUI.lvlib:CS++MotorGUI.lvclass"
CS++BaseActor:CS++BaseActor.LaunchDefaultGUI=False
CS++BaseActor:CS++BaseActor.PollingInterval_s=-1
CS++BaseActor:CS++BaseActor.ErrorDialog=True
CS++DeviceActors:CS++DeviceActor.ResourceName="MotorResource"
CS++DeviceActors:CS++DeviceActor.Reset=False
CS++DeviceActors:CS++DeviceActor.Selftest=True
CS++DeviceActors:CS++DeviceActor.OptionString=""
CS++DeviceActors:CS++DeviceActor.ResetWithDefaults=False
CS++Motor:CS++Motor.SimultaneousMove=True
CS++Motor:CS++Motor.AxisOverwrite=False
#CS++Motor:CS++Motor.LogicalAxesNames="comma separated list". 
CS++Motor:CS++Motor.LogicalAxesNames="M0,M1"
#CS++Motor:CS++Motor="Initial parameters for the different axes"
CS++Motor:CS++Motor.PhysicalName_M0="COM1"
CS++Motor:CS++Motor.StartVelocity_M0=0
CS++Motor:CS++Motor.StopVelocity_M0=0
CS++Motor:CS++Motor.Acceleration_M0=0
CS++Motor:CS++Motor.RangeMin_M0=0
CS++Motor:CS++Motor.RangeMax_M0=100
CS++Motor:CS++Motor.unit_M0="mm"
CS++Motor:CS++Motor.Scaling_M0=2
#CS++Motor:CS++Motor.LogicalPositionNames_M0="For each axis a list of names and positions seperated with a /"
CS++Motor:CS++Motor.LogicalPositionNames_M0="Pos1/10/Pos2/20/Pos3/30"
CS++Motor:CS++Motor.PhysicalName_M1="COM2"
CS++Motor:CS++Motor.StartVelocity_M1=0
CS++Motor:CS++Motor.StopVelocity_M1=0
CS++Motor:CS++Motor.Acceleration_M1=0
CS++Motor:CS++Motor.RangeMin_M1=0
CS++Motor:CS++Motor.RangeMax_M1=360
CS++Motor:CS++Motor.unit_M1="grad"
CS++Motor:CS++Motor.Scaling_M1=1
#CS++Motor:CS++Motor.LogicalPositionNames_M1="For each axis a list of names and positions seperated with a /"
CS++Motor:CS++Motor.LogicalPositionNames_M1="Pos1/45/Pos2/90/Pos3/135"

PV-URL are defined in a separate section, so it can be used by other objects, too, e.g. the corresponding GUI.
[myMotor.URLs]
ResourceName="ni.var.psp://localhost/myProcess/myMotor_ResourceName"
DriverRevision="ni.var.psp://localhost/myProcess/myMotor_DriverRevision"
FirmwareRevision="ni.var.psp://localhost/myProcess/myMotor_FirmwareRevision"
SelftestResultCode="ni.var.psp://localhost/myProcess/myMotor_SelftestResultCode"
SelftestResultMessage="ni.var.psp://localhost/myProcess/myMotor_SelftestResultMessage"
ErrorCode="ni.var.psp://localhost/myProcess/myMotor_ErrorCode"
ErrorMessage="ni.var.psp://localhost/myProcess/myMotor_ErrorMessage"
NumberOfAxes="ni.var.psp://localhost/myProcess/myMotor_NumberOfAxes"
SimultaneousMove="ni.var.psp://localhost/myProcess/myMotor_SimultaneousMove"
AxisOverwrite="ni.var.psp://localhost/myProcess/myMotor_AxisOverwrite"
PhysicalName_M0="ni.var.psp://localhost/myProcess/myMotor_PhysicalName_0"
Moving_M0="ni.var.psp://localhost/myProcess/mySimMotor_Moving_0"
Referenced_M0="ni.var.psp://localhost/myProcess/myMotor_Referenced_0"
Error_M0="ni.var.psp://localhost/myProcess/myMotor_Error_0"
unit_M0="ni.var.psp://localhost/myProcess/myMotor_unit_0"
SetPosition_M0="ni.var.psp://localhost/myProcess/myMotor_SetPosition_0"
ActPosition_M0="ni.var.psp://localhost/myProcess/myMotor_ActPosition_0"
RawSetPosition_M0="ni.var.psp://localhost/myProcess/myMotor_RawSetPosition_0"
RawActPosition_M0="ni.var.psp://localhost/myProcess/myMotor_RawActPosition_0"
StartVelocity_M0="ni.var.psp://localhost/myProcess/myMotor_StartVelocity_0"
StopVelocity_M0="ni.var.psp://localhost/myProcess/myMotor_StopVelocity_0"
Acceleration_M0="ni.var.psp://localhost/myProcess/myMotor_Acceleration_0"
RangeMin_M0="ni.var.psp://localhost/myProcess/myMotor_RangeMin_0"
RangeMax_M0="ni.var.psp://localhost/myProcess/myMotor_RangeMax_0"
Scaling_M0="ni.var.psp://localhost/myProcess/myMotor_Scaling_0"
RangeRefError_M0="ni.var.psp://localhost/myProcess/myMotor_RangeRefError_0"
Status_M0="ni.var.psp://localhost/myProcess/myMotor_Status_0"
LogicalPositionArray_M0="ni.var.psp://localhost/myProcess/myMotor_LogicalPositionArray_0"
NoOfCommands_M0="ni.var.psp://localhost/myProcess/myMotor_NoOfCommands_0"
PhysicalName_M1="ni.var.psp://localhost/myProcess/myMotor_PhysicalName_1"
Moving_M1="ni.var.psp://localhost/myProcess/myMotor_Moving_1"
Referenced_M1="ni.var.psp://localhost/myProcess/myMotor_Referenced_1"
Error_M1="ni.var.psp://localhost/myProcess/myMotor_Error_1"
unit_M1="ni.var.psp://localhost/myProcess/myMotor_unit_1"
SetPosition_M1="ni.var.psp://localhost/myProcess/myMotor_SetPosition_1"
ActPosition_M1="ni.var.psp://localhost/myProcess/myMotor_ActPosition_1"
RawSetPosition_M1="ni.var.psp://localhost/myProcess/myMotor_RawSetPosition_1"
RawActPosition_M1="ni.var.psp://localhost/myProcess/myMotor_RawActPosition_1"
StartVelocity_M1="ni.var.psp://localhost/myProcess/myMotor_StartVelocity_1"
StopVelocity_M1="ni.var.psp://localhost/myProcess/myMotor_StopVelocity_1"
Acceleration_M1="ni.var.psp://localhost/myProcess/myMotor_Acceleration_1"
RangeMin_M1="ni.var.psp://localhost/myProcess/myMotor_RangeMin_1"
RangeMax_M1="ni.var.psp://localhost/myProcess/myMotor_RangeMax_1"
Scaling_M1="ni.var.psp://localhost/myProcess/myMotor_Scaling_1"
RangeRefError_M1="ni.var.psp://localhost/myProcess/myMotor_RangeRefError_1"
Status_M1="ni.var.psp://localhost/myProcess/myMotor_Status_1"
LogicalPositionArray_M1="ni.var.psp://localhost/myProcess/myMotor_LogicalPositionArray_1"
NoOfCommands_M1="ni.var.psp://localhost/myProcess/myMotor_NoOfCommands_1"

[myMotor-Proxy]
LVClassPath="CS++PVProxy.lvlib:CS++PVProxy.lvclass"
CS++BaseActor:CS++BaseActor.DefaultGUI="D:\Git\CSPP\Packages\CSPP_DeviceBase\CS++MotorGUI\CS++MotorGUI.lvclass"
CS++BaseActor:CS++BaseActor.LaunchDefaultGUI=True
CS++PVProxy:CS++PVProxy.WorkerActor="myMotor"
CS++PVProxy:CS++PVProxy.DelayedActivation=True

[myMotor-Proxy.URLs]
Activate="ni.var.psp://localhost/myProcess/myMotorMsg_Activate"
Move_Msg="ni.var.psp://localhost/myProcess/myMotorMsg_Move"
ReferenceMove_Msg="ni.var.psp://localhost/myProcess/myMotorMsg_ReferenceMove"
StopMovement_Msg="ni.var.psp://localhost/myProcess/myMotorMsg_StopMovement"
AbortAllMovements_Msg="ni.var.psp://localhost/myProcess/myMotorMsg_AbortAllMovements"
Update_Error_Msg="ni.var.psp://localhost/myProcess/myMotor_Error_0,ni.var.psp://localhost/myProcess/myMotor_Error_1"
Update_Moving_Msg="ni.var.psp://localhost/myProcess/myMotor_Moving_0,ni.var.psp://localhost/myProcess/myMotor_Moving_1"
Update_RawActPosition_Msg="ni.var.psp://localhost/myProcess/myMotor_RawActPosition_0,ni.var.psp://localhost/myProcess/myMotor_RawActPosition_1"
Update_Referenced_Msg="ni.var.psp://localhost/myProcess/myMotor_Referenced_0,ni.var.psp://localhost/myProcess/myMotor_Referenced_1"